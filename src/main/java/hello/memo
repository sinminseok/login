
로그인 처리하기- 쿠키 사용

로그인 상태 유지하기: 서버에서 로그인에 성공하면 HTTP 응답에 쿠키를 담아서 브라우저에 전달하자ㅣ 그러면
브라우전ㄴ 앞으로 해당 쿠키를 지속해서 보내준다.

영속쿠키: 만료날짜를 입력하면 해당 날짜까지 유지
세션 쿠키: 만료날짜를 생략하면 브라우저 종료시 까지만 유지


쿠키와 보안문제: 쿠키를 사용해서 로그인Id를 전달해 로그인을 유지할 수 있다. 하지만 여기선 보안문제 이슈가 있다
보안문제:
    쿠키 값은 임의로 변경할수있다.: 클라이언트가 쿠키를 강제로 변경하면 다른 사용자가 된다.
    쿠키에 보관된 정보는 훔쳐갈 수 있다.: 만약 쿠키에 개인정보,신용카드 정보가 있다면 안댐,이 정보가 웹 브라우저에도 보관되고
    네트워크 요청마다 계속 클라이언트에서 서버로 전달된다. 쿠키의 정보가 나의 로컬 PC가 털릴수도있고 네트워크 전송 구간에서도 털릴수있다.
    해커가 쿠키를 한번 훔쳐가면 평생사용가능



로그인 처리하기 - 세션동작방식
 목표: 앞서 쿠키에 중요한 정보를 보관하는 방법은 여러 보안 이슈가 있다 이 문제를 해결하려면 결국 중요한 정보를 모두 서버에
 저장해야하고 클라이언트와 서버는 추정 불가능한 임의의 식별자 값으로 연결해야한다.
 이렇게 서버에 중요한 정보를 보관하고 연결을 유지하는 방법을 세션이라한다


클라이언트와 서버는 결국 쿠키로 연결이 되어야한다
    서버는 클라이언트에 세션ID만 쿠키에 담아서 전달하고 클라이언트는 쿠키 저장소에 쿠키를 보관한다.


 세션관리는 크게 3가지 기능을 제공하면된다.
 (1)세션 생성
 (2)세션 조회
 (3)세션 만료

request.getSession(true)
세션이 있으면 기존 세션반환
세션이 없으면 새로운 세션을 생성해서 반환한다.

request.getSession(false)
세션이 있으면 기존 세션 반환
세션이 없으면 새로운 세션을 생성하지 않는다.null을 반환한다.